<form class="mt-4 my--course--page" name="container-form" method="POST" action="/courses/handle-form-actions">
    <h3>The course has been deleted</h3>
    <a href="/me/stored/courses">
        <i class="fas fa-caret-left"></i>
        My Courses
    </a>

    <div class="input-group mb-3 mt-3 w-25 d-flex align-items-center">
        <select class="form-select" id="" name="actions" aria-label="Example select with button addon" required>
            <option value="">...Action...</option>
            <option value="restore">Restore</option>
            <option value="delete_force">Delete</option>
        </select>
        <button class="btn btn-outline-secondary disabled btn_action_submit" type="submit" >Action</button>
    </div>

    <table class="table mt-3">
        <thead>
            <tr>
                <th>
                    <div class="form-check me-3">
                        <input class="form-check-input" type="checkbox" value="" id="check_course_all_deleted">
                    </div>
                </th>
                <th scope="col">#</th>
                <th scope="col">
                    Name
                    {{{sortable 'name' _sort}}}
                </th>
                <th scope="col">
                    Level
                    {{{sortable 'level' _sort}}}
                </th>
                <th scope="col" colspan="3">
                    DeletedAt
                    {{{sortable 'deletedAt' _sort}}}
                </th>
            </tr>
        </thead>
        <tbody>
            {{#each courses}}
                <tr>
                    <td>
                        <div class="form-check me-3">
                            <input class="form-check-input" type="checkbox" name="courseIds[]" value="{{this._id}}">
                        </div>
                    </td>
                    <th scope="row">{{sum @index 1}}</th>
                    <td class="col-md-3">{{this.name}}</td>
                    <td class="col-md-2">{{this.level}}</td>
                    <td class="col-md-5">{{this.deletedAt}}</td>
                    <td><a href="#" type="button" class="btn btn-success btn-restore" data-bs-id="{{this._id}}">Restore</a></td>
                    <td><a href="#" type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#delete-coures-modal" data-bs-id="{{this._id}}">Delete</a></td>
                </tr>

            {{else}}
                <tr>
                    <td colspan="6" class="text-center">
                        No courses have been deleted.
                        <a href="/me/stored/courses">My course</a>
                    </td>
                </tr>
            {{/each}}
        </tbody>
    </table>
</form>

{{!-- comfirm delete course --}}

<!-- Modal -->
<div class="modal fade" id="delete-coures-modal" tabindex="-1" aria-labelledby="delete-coures-modal" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Remove course</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            Are you sure you want to remove course <b class="name-course-remove"></b>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" id="btn-delete-course">Delete</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
    </div>
  </div>
</div>

{{!-- Delete hidden form --}}
<form name="form-course" action="" method="POST"></form>

<script>
    function handeSubmitDeleteCourse() {
        // xử lý dữ liệu được truyền bằng data-bs-*: https://getbootstrap.com/docs/5.2/components/modal/
        const deleteCouresModal = document.getElementById('delete-coures-modal')
        deleteCouresModal.addEventListener('show.bs.modal', event => {
            // Button that triggered the modal on table
            const button = event.relatedTarget
            // Extract info from data-bs-* attributes
            const recipient = button.getAttribute('data-bs-id')
            // If necessary, you could initiate an AJAX request here
            // and then do the updating in a callback.
            
            const btnDeleteCourse = document.querySelector('#btn-delete-course')
            const formCourse = document.forms['form-course']

            btnDeleteCourse.addEventListener('click', () => {
                formCourse.action = '/courses/' + recipient + '/force?_method=DELETE'
                formCourse.submit()
            })
        })
    }

    // Cach lay gia tri cua mot cot trong hang duoc click
    function confimRemoveCourseModal() {
        const table = document.querySelector("table");

        table.addEventListener("click", function(event) {
            const target = event.target;
            const row = target.closest("tr");
            // Update the modal's content.
            document.querySelector('.name-course-remove').textContent = row.cells[2].textContent
        });
    }

    // Khoi phuc course deleted
    function restoreCourse() {
        const btn_restores = document.querySelectorAll('.btn-restore')
        for(let btn_restore of btn_restores) {
            btn_restore.addEventListener('click', event => {
                event.preventDefault()
                
                const button = event.target
                const recipient = button.getAttribute('data-bs-id')
                const formCourse = document.forms['form-course']

                formCourse.action = '/courses/' + recipient + '/restore?_method=PATCH'
                formCourse.submit()
            })
        }
    }

    //handle checkbox course deleted change
    function handleCheckCourses() {
        const check_course_all_deleted = document.querySelector('#check_course_all_deleted')
        const check_course_items_deleted = Array.from(document.querySelectorAll('input[name="courseIds[]"]'))

        // change check_course_all_deleted
        check_course_all_deleted.addEventListener('change', (event) => {
            const target = event.target
            let isCheckCourseAllDeleted = target.checked
            check_course_items_deleted.map((item) => item.checked = isCheckCourseAllDeleted)
            renderACtionBtnSubmit()
        })

        // change chech_course_items_deleted
        check_course_items_deleted.map((item) => item.addEventListener('change', (event) => {
            let count_checked_course_items = check_course_items_deleted.filter((item) => item.checked).length
            check_course_all_deleted.checked = (count_checked_course_items === check_course_items_deleted.length)
            renderACtionBtnSubmit()
        }))

    }

    // Re-render button Action
    function renderACtionBtnSubmit() {
        const btnActionSubmit = document.querySelector('.btn_action_submit')
        const count_checked_course_items = document.querySelectorAll('input[name="courseIds[]"]:checked').length
        //let count_checked_course_items = check_course_items_deleted.filter((item) => item.checked).length

        if (count_checked_course_items > 0)
            btnActionSubmit.classList.remove('disabled')
        else
            btnActionSubmit.classList.add('disabled')
    }
    
    document.addEventListener("DOMContentLoaded", () => {
        confimRemoveCourseModal()
        handeSubmitDeleteCourse()
        restoreCourse()
        handleCheckCourses()
    })


</script>